{"version":3,"file":"./lib/fxbuilder.min.js","mappings":"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","sources":["webpack://XMLBuilder/./src/xmlbuilder/json2xml.js","webpack://XMLBuilder/./src/xmlbuilder/orderedJs2Xml.js","webpack://XMLBuilder/webpack/bootstrap","webpack://XMLBuilder/webpack/startup"],"sourcesContent":["'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: {\n    \">\" : { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    \"<\" : { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    \"sQuot\" : { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    \"dQuot\" : { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  },\n  processEntities: true,\n  stopNodes: []\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.suppressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n\n  this.replaceEntitiesValue = replaceEntitiesValue;\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        let val = this.options.attributeValueProcessor(attr, '' + jObj[key]);\n        val = this.replaceEntitiesValue(val);\n        attrStr += ' ' + attr + '=\"' + val + '\"';\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          val += this.processTextOrObjNode(item, key, level)\n        } else {\n          val += this.buildTextNode(item, key, '', level);\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          let val = this.options.attributeValueProcessor(Ks[j], '' + jObj[key][Ks[j]]);\n          val = this.replaceEntitiesValue(val);\n          attrStr += ' ' + Ks[j] + '=\"' + val + '\"';\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextNode(result.val, key, result.attrStr, level);\n  } else {\n    return this.buildObjNode(result.val, key, result.attrStr, level);\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  if (attrStr && val.indexOf('<') === -1) {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      '>' +\n      val +\n      //+ this.newLine\n      // + this.indentate(level)\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  } else {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      this.tagEndChar +\n      val +\n      //+ this.newLine\n      this.indentate(level) +\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n    //+ this.newLine\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  let textValue = this.options.tagValueProcessor(key, val);\n  textValue = this.replaceEntitiesValue(textValue);\n  \n  return (\n    this.indentate(level) +\n    '<' +\n    key +\n    attrStr +\n    '>' +\n     textValue +\n    '</' +\n    key +\n    this.tagEndChar\n  );\n}\n\nfunction replaceEntitiesValue(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (const entityName in this.options.entities) {\n      const entity = this.options.entities[entityName];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if( val === '' && this.options.unpairedTags.indexOf(key) !== -1){\n    return this.indentate(level) + '<' + key + attrStr + this.tagEndChar;\n  }else if (val !== '') {\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options){\n    return arrToStr( jArray, options, \"\", 0);\n}\n\nfunction arrToStr(arr, options, jPath, level){\n    let xmlStr = \"\";\n\n    let indentation = \"\";\n    if(options.format && options.indentBy.length > 0){//TODO: this logic can be avoided for each call\n        indentation = EOL + \"\" + options.indentBy.repeat(level);\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        let newJPath = \"\";\n        if(jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if(tagName === options.textNodeName){\n            let tagText = tagObj[tagName];\n            if(!isStopNode(newJPath, options)){\n                tagText = options.tagValueProcessor( tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            xmlStr += indentation + tagText;\n            continue;\n        }else if( tagName === options.cdataPropName){\n            xmlStr += indentation + `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            continue;\n        }else if( tagName === options.commentPropName){\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            continue;\n        }else if( tagName[0] === \"?\"){\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            xmlStr += indentation + `<${tagName} ${tagObj[tagName][0][options.textNodeName]} ${attStr}?>`;\n            continue;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        let tagStart =  indentation + `<${tagName}${attStr}`;\n        let tagValue = arrToStr(tagObj[tagName], options, newJPath, level + 1);\n        if(options.unpairedTags.indexOf(tagName) !== -1){\n            xmlStr += tagStart + \">\"; \n        }else if( (!tagValue || tagValue.length === 0) && options.suppressEmptyNode){ \n            xmlStr += tagStart + \"/>\"; \n        }else{ \n            //TODO: node with only text value should not parse the text value in next line\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>` ;\n        }\n    }\n    \n    return xmlStr;\n}\n\nfunction propName(obj){\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if(key !== \":@\") return key;\n    }\n  }\n\nfunction attr_to_str(attrMap, options){\n    let attrStr = \"\";\n    if(attrMap && !options.ignoreAttributes){\n        for( attr in attrMap){\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if(attrVal === true && options.suppressBooleanAttributes){\n                attrStr+= ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            }else{\n                attrStr+= ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options){\n    jPath = jPath.substr(0,jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for(let index in options.stopNodes){\n        if(options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\"+tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options){\n    if(textValue && textValue.length > 0 && options.processEntities){\n      for (const entityName in options.entities) {\n        const entity = options.entities[entityName];\n        textValue = textValue.replace(entity.regex, entity.val);\n      }\n    }\n    return textValue;\n  }\nmodule.exports = toXml;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(784);\n"],"names":["buildFromOrderedJs","require","defaultOptions","attributeNamePrefix","attributesGroupName","textNodeName","ignoreAttributes","cdataPropName","format","indentBy","suppressEmptyNode","suppressBooleanAttributes","tagValueProcessor","key","a","attributeValueProcessor","attrName","preserveOrder","commentPropName","unpairedTags","entities","regex","RegExp","val","processEntities","stopNodes","Builder","options","this","Object","assign","isAttribute","attrPrefixLen","length","processTextOrObjNode","indentate","tagEndChar","newLine","buildTextNode","buildEmptyTextNode","buildObjNode","buildEmptyObjNode","buildTextValNode","buildObjectNode","replaceEntitiesValue","object","level","result","j2x","undefined","keys","attrStr","indexOf","textValue","entityName","entity","replace","repeat","name","startsWith","substr","prototype","build","jObj","Array","isArray","arrayNodeName","Date","attr","newval","arrLen","j","item","Ks","L","module","exports","arrToStr","arr","jPath","xmlStr","indentation","i","newJPath","tagObj","tagName","propName","tagStart","attr_to_str","tagValue","attStr","tagText","isStopNode","obj","attrMap","attrVal","lastIndexOf","index","jArray","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}