{"version":3,"file":"./lib/fxbuilder.min.js","mappings":"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","sources":["webpack://XMLBuilder/./src/xmlbuilder/json2xml.js","webpack://XMLBuilder/./src/xmlbuilder/orderedJs2Xml.js","webpack://XMLBuilder/webpack/bootstrap","webpack://XMLBuilder/webpack/startup"],"sourcesContent":["'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  transformTagName: false,\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.suppressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n\n  this.replaceEntitiesValue = replaceEntitiesValue;\n  this.buildAttrPairStr = buildAttrPairStr;\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          val += this.processTextOrObjNode(item, key, level)\n        } else {\n          val += this.buildTextNode(item, key, '', level);\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction buildAttrPairStr(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjNode(result.val, key, result.attrStr, level);\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  let tagEndExp = '</' + key + this.tagEndChar;\n  let piClosingChar = \"\";\n  \n  if(key[0] === \"?\") {\n    piClosingChar = \"?\";\n    tagEndExp = \"\";\n  }\n\n  if (attrStr && val.indexOf('<') === -1) {\n    return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n  } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n    return this.indentate(level) + `<!--${val}-->` + this.newLine;\n  }else {\n    return (\n      this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n      val +\n      this.indentate(level) + tagEndExp    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === '' && this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n      if(this.options.suppressUnpairedNode){\n        return this.indentate(level) + '<' + key + this.tagEndChar;\n      }else{\n        return this.indentate(level) + '<' + key + \"/\" + this.tagEndChar;\n      }\n    } else{\n      return (\n        this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar  );\n    }\n\n  }\n}\n\nfunction replaceEntitiesValue(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if( val === '' && this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(this.options.suppressUnpairedNode){\n      return this.indentate(level) + '<' + key + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + \"/\" + this.tagEndChar;\n    }\n  }else if (val !== '') { //empty\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; //PI tag\n    else return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar; //normal\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options){\n    return arrToStr( jArray, options, \"\", 0);\n}\n\nfunction arrToStr(arr, options, jPath, level){\n    let xmlStr = \"\";\n\n    let indentation = \"\";\n    if(options.format && options.indentBy.length > 0){//TODO: this logic can be avoided for each call\n        indentation = EOL + \"\" + options.indentBy.repeat(level);\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        let newJPath = \"\";\n        if(jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if(tagName === options.textNodeName){\n            let tagText = tagObj[tagName];\n            if(!isStopNode(newJPath, options)){\n                tagText = options.tagValueProcessor( tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            xmlStr += indentation + tagText;\n            continue;\n        }else if( tagName === options.cdataPropName){\n            xmlStr += indentation + `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            continue;\n        }else if( tagName === options.commentPropName){\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            continue;\n        }else if( tagName[0] === \"?\"){\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            continue;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        let tagStart =  indentation + `<${tagName}${attStr}`;\n        let tagValue = arrToStr(tagObj[tagName], options, newJPath, level + 1);\n        if(options.unpairedTags.indexOf(tagName) !== -1){\n            if(options.suppressUnpairedNode)  xmlStr += tagStart + \">\"; \n            else xmlStr += tagStart + \"/>\"; \n        }else if( (!tagValue || tagValue.length === 0) && options.suppressEmptyNode){ \n            xmlStr += tagStart + \"/>\"; \n        }else{ \n            //TODO: node with only text value should not parse the text value in next line\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>` ;\n        }\n    }\n    \n    return xmlStr;\n}\n\nfunction propName(obj){\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if(key !== \":@\") return key;\n    }\n  }\n\nfunction attr_to_str(attrMap, options){\n    let attrStr = \"\";\n    if(attrMap && !options.ignoreAttributes){\n        for (let attr in attrMap){\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if(attrVal === true && options.suppressBooleanAttributes){\n                attrStr+= ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            }else{\n                attrStr+= ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options){\n    jPath = jPath.substr(0,jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for(let index in options.stopNodes){\n        if(options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\"+tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options){\n    if(textValue && textValue.length > 0 && options.processEntities){\n      for (let i=0; i< options.entities.length; i++) {\n        const entity = options.entities[i];\n        textValue = textValue.replace(entity.regex, entity.val);\n      }\n    }\n    return textValue;\n  }\nmodule.exports = toXml;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(784);\n"],"names":["buildFromOrderedJs","require","defaultOptions","attributeNamePrefix","attributesGroupName","textNodeName","ignoreAttributes","cdataPropName","format","indentBy","suppressEmptyNode","suppressUnpairedNode","suppressBooleanAttributes","tagValueProcessor","key","a","attributeValueProcessor","attrName","preserveOrder","commentPropName","unpairedTags","entities","regex","RegExp","val","processEntities","stopNodes","transformTagName","Builder","options","this","Object","assign","isAttribute","attrPrefixLen","length","processTextOrObjNode","indentate","tagEndChar","newLine","buildTextNode","buildEmptyTextNode","buildObjNode","buildEmptyObjNode","buildTextValNode","buildObjectNode","replaceEntitiesValue","buildAttrPairStr","object","level","result","j2x","undefined","keys","attrStr","tagEndExp","piClosingChar","indexOf","textValue","i","entity","replace","repeat","name","startsWith","substr","prototype","build","jObj","Array","isArray","arrayNodeName","Date","attr","newval","arrLen","j","item","Ks","L","module","exports","arrToStr","arr","jPath","xmlStr","indentation","newJPath","tagObj","tagName","propName","tagStart","attr_to_str","tagValue","attStr","tempInd","piTextNodeName","tagText","isStopNode","obj","attrMap","attrVal","lastIndexOf","index","jArray","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}