{"version":3,"file":"./lib/fxparser.js","mappings":"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","sources":["webpack://fxparser/./node_modules/strnum/strnum.js","webpack://fxparser/./src/fxp.js","webpack://fxparser/./src/util.js","webpack://fxparser/./src/validator.js","webpack://fxparser/./src/xmlbuilder/json2xml.js","webpack://fxparser/./src/xmlbuilder/orderedJs2Xml.js","webpack://fxparser/./src/xmlparser/DocTypeReader.js","webpack://fxparser/./src/xmlparser/OptionsBuilder.js","webpack://fxparser/./src/xmlparser/OrderedObjParser.js","webpack://fxparser/./src/xmlparser/XMLParser.js","webpack://fxparser/./src/xmlparser/node2json.js","webpack://fxparser/./src/xmlparser/xmlNode.js","webpack://fxparser/webpack/bootstrap","webpack://fxparser/webpack/before-startup","webpack://fxparser/webpack/startup","webpack://fxparser/webpack/after-startup"],"sourcesContent":["const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n","'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: {\n    \">\" : { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    \"<\" : { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    \"sQuot\" : { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    \"dQuot\" : { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  },\n  processEntities: true,\n  stopNodes: []\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.suppressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n\n  this.replaceEntitiesValue = replaceEntitiesValue;\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        let val = this.options.attributeValueProcessor(attr, '' + jObj[key]);\n        val = this.replaceEntitiesValue(val);\n        attrStr += ' ' + attr + '=\"' + val + '\"';\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          val += this.processTextOrObjNode(item, key, level)\n        } else {\n          val += this.buildTextNode(item, key, '', level);\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          let val = this.options.attributeValueProcessor(Ks[j], '' + jObj[key][Ks[j]]);\n          val = this.replaceEntitiesValue(val);\n          attrStr += ' ' + Ks[j] + '=\"' + val + '\"';\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextNode(result.val, key, result.attrStr, level);\n  } else {\n    return this.buildObjNode(result.val, key, result.attrStr, level);\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  if (attrStr && val.indexOf('<') === -1) {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      '>' +\n      val +\n      //+ this.newLine\n      // + this.indentate(level)\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  } else {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      this.tagEndChar +\n      val +\n      //+ this.newLine\n      this.indentate(level) +\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n    //+ this.newLine\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  let textValue = this.options.tagValueProcessor(key, val);\n  textValue = this.replaceEntitiesValue(textValue);\n  \n  return (\n    this.indentate(level) +\n    '<' +\n    key +\n    attrStr +\n    '>' +\n     textValue +\n    '</' +\n    key +\n    this.tagEndChar\n  );\n}\n\nfunction replaceEntitiesValue(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (const entityName in this.options.entities) {\n      const entity = this.options.entities[entityName];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if( val === '' && this.options.unpairedTags.indexOf(key) !== -1){\n    return this.indentate(level) + '<' + key + attrStr + this.tagEndChar;\n  }else if (val !== '') {\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options){\n    return arrToStr( jArray, options, \"\", 0);\n}\n\nfunction arrToStr(arr, options, jPath, level){\n    let xmlStr = \"\";\n\n    let indentation = \"\";\n    if(options.format && options.indentBy.length > 0){//TODO: this logic can be avoided for each call\n        indentation = EOL + \"\" + options.indentBy.repeat(level);\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        let newJPath = \"\";\n        if(jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if(tagName === options.textNodeName){\n            let tagText = tagObj[tagName];\n            if(!isStopNode(newJPath, options)){\n                tagText = options.tagValueProcessor( tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            xmlStr += indentation + tagText;\n            continue;\n        }else if( tagName === options.cdataPropName){\n            xmlStr += indentation + `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            continue;\n        }else if( tagName === options.commentPropName){\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            continue;\n        }else if( tagName[0] === \"?\"){\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            xmlStr += indentation + `<${tagName} ${tagObj[tagName][0][options.textNodeName]} ${attStr}?>`;\n            continue;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        let tagStart =  indentation + `<${tagName}${attStr}`;\n        let tagValue = arrToStr(tagObj[tagName], options, newJPath, level + 1);\n        if(options.unpairedTags.indexOf(tagName) !== -1){\n            xmlStr += tagStart + \">\"; \n        }else if( (!tagValue || tagValue.length === 0) && options.suppressEmptyNode){ \n            xmlStr += tagStart + \"/>\"; \n        }else{ \n            //TODO: node with only text value should not parse the text value in next line\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>` ;\n        }\n    }\n    \n    return xmlStr;\n}\n\nfunction propName(obj){\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if(key !== \":@\") return key;\n    }\n  }\n\nfunction attr_to_str(attrMap, options){\n    let attrStr = \"\";\n    if(attrMap && !options.ignoreAttributes){\n        for( attr in attrMap){\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if(attrVal === true && options.suppressBooleanAttributes){\n                attrStr+= ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            }else{\n                attrStr+= ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options){\n    jPath = jPath.substr(0,jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for(let index in options.stopNodes){\n        if(options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\"+tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options){\n    if(textValue && textValue.length > 0 && options.processEntities){\n      for (const entityName in options.entities) {\n        const entity = options.entities[entityName];\n        textValue = textValue.replace(entity.regex, entity.val);\n      }\n    }\n    return textValue;\n  }\nmodule.exports = toXml;","//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, entity = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<') {\n                if( hasBody && \n                     xmlData[i+1] === '!' &&\n                     xmlData[i+2] === 'E' &&\n                     xmlData[i+3] === 'N' &&\n                     xmlData[i+4] === 'T' &&\n                     xmlData[i+5] === 'I' &&\n                     xmlData[i+6] === 'T' &&\n                     xmlData[i+7] === 'Y'\n                ){\n                    i += 7;\n                    entity = true;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                     xmlData[i+2] === 'E' &&\n                     xmlData[i+3] === 'L' &&\n                     xmlData[i+4] === 'E' &&\n                     xmlData[i+5] === 'M' &&\n                     xmlData[i+6] === 'E' &&\n                     xmlData[i+7] === 'N' &&\n                     xmlData[i+8] === 'T'\n                ){\n                    //Not supported\n                    i += 8;\n                }else if( //comment\n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === '-' &&\n                    xmlData[i+3] === '-'\n                ){\n                    comment = true;\n                }else{\n                    throw new Error(\"Invalid DOCTYPE\");\n                }\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') {\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                    }else{\n                        throw new Error(`Invalid XML comment in DOCTYPE`);\n                    }\n                }else if(entity){\n                    parseEntityExp(exp, entities);\n                    entity = false;\n                }\n                angleBracketsCount--;\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nconst entityRegex = RegExp(\"^\\\\s([a-zA-z0-0]+)[ \\t](['\\\"])([^&]+)\\\\2\");\nfunction parseEntityExp(exp, entities){\n    const match = entityRegex.exec(exp);\n    if(match){\n        entities[ match[1] ] = {\n            regx : RegExp( `&${match[1]};`,\"g\"),\n            val: match[3]\n        };\n    }\n}\nmodule.exports = readDocType;","\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"amp\" : { regex: /&(amp|#38|#x26);/g, val : \"&\"},\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      const aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs;\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n        \n        currentNode = this.tagsNodeStack.pop();//avoid recurssion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        const childNode = new xmlNode(tagData.tagName);\n        childNode.add(this.options.textNodeName, \"\");\n        \n        if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n          childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath);\n        }\n        currentNode.addChild(childNode);\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          // let val = this.parseTextData(tagExp, this.options.cdataPropName, jPath + \".\" + this.options.cdataPropName, true, false, true);\n          // if(!val) val = \"\";\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true);\n          if(!val) val = \"\";\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n       \n        let result = readTagExp(xmlData,i, this. options.removeNSPrefix);\n        let tagName= result.tagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n        }\n\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) { //TODO: namespace\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){}\n          //boolean tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){}\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, tagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${tagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          currentNode.addChild(childNode);\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            \n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n            }\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n            currentNode.addChild(childNode);\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n            }\n            currentNode.addChild(childNode);\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nconst replaceEntitiesValue = function(val){\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-dobule quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n    tagExp = tagExp.substr(separatorIndex + 1);\n  }\n\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\" && xmlData[i+1] === \"/\"){ \n        const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n        let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n        if(closeTagName === tagName){\n          return {\n            tagContent: xmlData.substring(startIndex, i),\n            i : closeIndex\n          }\n        }\n        i=closeIndex;\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n","const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;","'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined) {\n        if(!Array.isArray(compressedObj[property])) {\n          compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const propCount = Object.keys(obj).length;\n  if( propCount === 0 || (propCount === 1 && obj[options.textNodeName]) ) return true;\n  return false;\n}\nexports.prettify = prettify;\n","'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/fxp.js\");\n",""],"names":["hexRegex","numRegex","Number","parseInt","window","parseFloat","consider","hex","leadingZeros","decimalPoint","eNotation","toNumber","str","options","Object","assign","trimmedStr","trim","skipLike","undefined","test","match","exec","sign","numTrimmedByZeros","trimZeros","length","num","numStr","search","indexOf","replace","substr","module","exports","validator","require","XMLParser","XMLBuilder","XMLValidator","nameStartChar","nameChar","nameRegexp","regexName","RegExp","getAllMatches","string","regex","matches","allmatches","startIndex","lastIndex","len","index","push","isName","isExist","v","isEmptyObject","obj","keys","merge","target","a","arrayMode","i","getValue","util","defaultOptions","allowBooleanAttributes","unpairedTags","validate","xmlData","tags","tagFound","reachedRoot","readPI","err","tagStartPos","readCommentAndCDATA","closingTag","tagName","substring","validateTagName","msg","getErrorObject","getLineNumberForPosition","result","readAttributeStr","attrStr","value","attrStrStart","isValid","validateAttributeString","code","line","tagClosed","otg","pop","openPos","col","afterAmp","validateAmpersand","isWhiteSpace","JSON","stringify","map","t","char","start","tagname","angleBracketsCount","doubleQuote","singleQuote","startChar","validAttrStrRegxp","attrNames","getPositionFromMatch","attrName","validateAttrName","hasOwnProperty","validateNumberAmpersand","re","count","message","lineNumber","lines","split","buildFromOrderedJs","attributeNamePrefix","attributesGroupName","textNodeName","ignoreAttributes","cdataPropName","format","indentBy","suppressEmptyNode","suppressBooleanAttributes","tagValueProcessor","key","attributeValueProcessor","preserveOrder","commentPropName","entities","val","processEntities","stopNodes","Builder","isAttribute","attrPrefixLen","processTextOrObjNode","indentate","tagEndChar","newLine","buildTextNode","buildEmptyTextNode","buildObjNode","buildEmptyObjNode","buildTextValNode","buildObjectNode","replaceEntitiesValue","prototype","build","jObj","Array","isArray","arrayNodeName","j2x","level","Date","attr","newval","arrLen","j","item","Ks","L","object","textValue","entityName","entity","repeat","name","startsWith","EOL","toXml","jArray","arrToStr","arr","jPath","xmlStr","indentation","tagObj","propName","newJPath","tagText","isStopNode","attStr","attr_to_str","tagStart","tagValue","attrMap","attrVal","lastIndexOf","readDocType","hasBody","comment","exp","Error","parseEntityExp","entityRegex","regx","removeNSPrefix","parseTagValue","parseAttributeValue","trimValues","numberParseOptions","alwaysCreateTextNode","htmlEntities","buildOptions","xmlNode","OrderedObjParser","currentNode","tagsNodeStack","docTypeEntities","lastEntities","addExternalEntities","parseXml","parseTextData","resolveNameSpace","buildAttributesMap","isItStopNode","readStopNodeData","saveTextToParentTag","externalEntities","entKeys","ent","dontTrim","hasAttributes","isLeafNode","escapeEntities","parseValue","trimmedVal","prefix","charAt","attrsRegx","attrs","oldVal","aName","newVal","attrCollection","xmlObj","textData","ch","closeIndex","findClosingIndex","colonIndex","tagData","readTagExp","childNode","add","tagExp","attrExpPresent","addChild","endIndex","lastTag","tagContent","child","currentTagName","allNodesExp","stopNodePath","stopNodeExp","tagExpWithClosingIndex","closingChar","attrBoundary","data","errMsg","closingIndex","separatorIndex","closeTagName","shouldParse","prettify","parse","validationOption","toString","orderedObjParser","orderedResult","addEntity","node","compress","text","compressedObj","property","newJpath","isLeaf","isLeafTag","assignAttributes","jpath","atrrName","propCount","XmlNode"],"sourceRoot":""}